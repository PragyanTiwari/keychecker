name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Security: No default permissions - each job specifies its own
permissions: {}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout repository contents
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        version: "0.8.12"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run tests
      run: uv run pytest -v
    
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout repository contents
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        version: "0.8.12"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run linting
      run: |
        uv run flake8 keychecker/ tests/
        uv run black --check keychecker/ tests/
    
    - name: Run type checking
      run: uv run mypy keychecker/

  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout repository contents
      security-events: write  # Required for uploading SARIF results
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        version: "0.8.12"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run Bandit security scan
      uses: PyCQA/bandit-action@67a458d90fa11fb1463e91e7f4c8f068b5863c7f # v1.0.1
      with:
        exclude: "tests,scripts,__pycache__,*.pyc,.git"
        format: sarif
        exit_zero: false  # Fail build on security issues
        
    - name: Upload Bandit results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@4f3212b61783c3c68e8309a0f18a699764811cda # v3.27.1
      if: always()
      with:
        sarif_file: results.sarif
        category: bandit
    
    - name: Run pip-audit vulnerability scan
      uses: pypa/gh-action-pip-audit@1220774d901786e6f652ae159f7b6bc8fea6d266 # v1.1.0
      with:
        virtual-environment: .venv
        # Note: This action doesn't produce SARIF output, so results appear in CI logs only

  build:
    needs: [test, lint, security]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write  # Required for uploading artifacts
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        version: "0.8.12"
    
    - name: Set up Python
      run: uv python install 3.9  # Use minimum supported version for build
    
    - name: Install build dependencies
      run: uv tool install twine
    
    - name: Build package
      run: uv build
    
    - name: Check package
      run: uv tool run twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: dist-${{ github.sha }}
        path: dist/
        retention-days: 7
