name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Security: No default permissions - each job specifies its own
permissions: {}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout repository contents
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        pytest -v
    
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout repository contents
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Set up Python
      uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run linting
      run: |
        flake8 keychecker/ tests/
        black --check keychecker/ tests/
    
    - name: Run type checking
      run: |
        mypy keychecker/

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write  # Required for uploading artifacts
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
      with:
        python-version: '3.8'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: dist-${{ github.sha }}
        path: dist/
        retention-days: 7
