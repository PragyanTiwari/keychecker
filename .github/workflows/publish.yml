name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.1)'
        required: true
        default: '1.0.1'

# Security: No default permissions - each job specifies its own
permissions: {}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required to checkout repository contents
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        version: "0.8.12"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run tests
      run: uv run pytest -v
    
    - name: Run linting
      run: |
        uv run flake8 keychecker/ tests/
        uv run black --check keychecker/ tests/
    
    - name: Run type checking
      run: uv run mypy keychecker/

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write  # Required for uploading artifacts
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        version: "0.8.12"
    
    - name: Set up Python
      run: uv python install 3.9  # Use minimum supported version for build
    
    - name: Install build dependencies
      run: uv tool install build twine
    
    - name: Build package
      run: uv build
    
    - name: Check package
      run: uv tool run twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: dist
        path: dist/

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: read  # Required to checkout repository contents
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        version: "0.8.12"
    
    - name: Set up Python
      run: uv python install 3.9  # Use minimum supported version for build
    
    - name: Install build dependencies
      run: uv tool install build twine
    
    - name: Build package
      run: uv build
    
    - name: Publish to TestPyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
      run: uv tool run twine upload --repository testpypi dist/*
    
    - name: Test installation from TestPyPI
      run: |
        uv pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ keychecker
        uv run keychecker --help

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: read  # Required to checkout repository contents
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    
    - name: Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        version: "0.8.12"
    
    - name: Set up Python
      run: uv python install 3.9  # Use minimum supported version for build
    
    - name: Install build dependencies
      run: uv tool install build twine
    
    - name: Build package
      run: uv build
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: uv tool run twine upload dist/*
    
    - name: Verify publication
      run: |
        uv pip install keychecker
        uv run keychecker --help
